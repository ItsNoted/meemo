#!/usr/bin/env node

'use strict';

var async = require('async'),
    ldapjs = require('ldapjs'),
    MongoClient = require('mongodb').MongoClient;

function exit(error) {
    if (error) console.error(error);
    process.exit(error ? 1 : 0);
}

MongoClient.connect(process.env.CLOUDRON_MONGODB_URL || 'mongodb://127.0.0.1:27017/meemo', function (error, db) {
    if (error) exit(error);

    db.listCollections().toArray(function (error, collections) {
        if (error) exit(error);

        var ldapClient = ldapjs.createClient({ url: process.env.CLOUDRON_LDAP_URL });
        ldapClient.on('error', function (error) {
            console.error('LDAP error', error);
            exit(error);
        });

        ldapClient.search(process.env.CLOUDRON_LDAP_USERS_BASE_DN, {}, function (error, result) {
            if (error) exit(error);

            var users = [];

            result.on('searchEntry', function (entry) {
                // skip user records where uid = username
                if (entry.object.uid === entry.object.username) return;

                users.push(entry.object);
            });
            result.on('error', function (error) {
                exit(error)
            });
            result.on('end', function () {
                async.eachSeries(collections, function (collection, callback) {
                    var user = users.find(function (u) { return collection.name.indexOf(u.uid) === 0; });
                    if (!user) {
                        console.log('No user found for collection', collection.name,  'probably already migrated');
                        return callback();
                    }

                    var newName = user.username + '_' + collection.name.split('_')[1];
                    console.log('Collection', collection.name, 'belongs to user', user.username, 'renaming to', newName);

                    db.renameCollection(collection.name, newName, { dropTarget: true }, callback);
                }, function (error) {
                    if (error) exit(error);

                    console.log('Migration done');

                    exit();
                });
            });
        });
    });
});
